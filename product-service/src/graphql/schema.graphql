type Product {
  id: ID!
  name: String!
  description: String!
  price: Float!
  stock: Int!
  categoryId: ID!
  category: Category
  isAvailable: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Category {
  id: ID!
  name: String!
  description: String
  createdAt: String!
  updatedAt: String!
}

# Store Analytics Types
type StoreStats {
  totalProducts: Int!
  totalValue: Float!
  lowStockProducts: Int!
  outOfStockProducts: Int!
  averagePrice: Float!
  categoriesUsed: [String!]!
}

type CategoryStats {
  categoryId: ID!
  productCount: Int!
  totalValue: Float!
  averagePrice: Float!
  totalStock: Int!
}

type StoreOverview {
  stats: StoreStats!
  categoryBreakdown: [CategoryStats!]!
  recentProducts: [Product!]!
  lowStockAlerts: [Product!]!
}

type ProductAnalytics {
  productId: ID!
  name: String!
  categoryId: ID!
  stockLevel: StockLevel!
  priceCategory: PriceCategory!
  availability: Boolean!
  value: Float!
}

type InventorySummary {
  totalProducts: Int!
  totalStockValue: Float!
  totalItems: Int!
  averageStockPerProduct: Float!
}

enum StockLevel {
  HIGH
  MEDIUM
  LOW
  OUT_OF_STOCK
}

enum PriceCategory {
  BUDGET
  MID_RANGE
  PREMIUM
}

input CreateProductInput {
  name: String!
  description: String!
  price: Float!
  stock: Int!
  categoryId: ID!
}

input UpdateProductInput {
  id: ID!
  name: String
  description: String
  price: Float
  stock: Int
  categoryId: ID
}

input ProductFilterInput {
  categoryId: ID
  minPrice: Float
  maxPrice: Float
  inStock: Boolean
  search: String
}

input PaginationInput {
  page: Int = 1
  limit: Int = 10
}

type PaginationInfo {
  currentPage: Int!
  totalPages: Int!
  totalItems: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type ProductConnection {
  products: [Product!]!
  pagination: PaginationInfo!
}

type Query {
  # Get single product by ID
  product(id: ID!): Product
  
  # Get products with filtering and pagination
  products(
    filter: ProductFilterInput
    pagination: PaginationInput
  ): ProductConnection!
  
  # Get products by category
  productsByCategory(
    categoryId: ID!
    pagination: PaginationInput
  ): ProductConnection!
  
  # Search products
  searchProducts(
    query: String!
    pagination: PaginationInput
  ): ProductConnection!

  # Store Team Queries - Comprehensive data about products and store
  
  # Get complete store overview with all statistics
  storeOverview: StoreOverview!
  
  # Get detailed store statistics
  storeStats: StoreStats!
  
  # Get category breakdown with statistics
  categoryBreakdown: [CategoryStats!]!
  
  # Get product analytics with categorization
  productAnalytics: [ProductAnalytics!]!
  
  # Get inventory summary
  inventorySummary: InventorySummary!
  
  # Get low stock alerts
  lowStockAlerts(threshold: Int = 10): [Product!]!
  
  # Get out of stock products
  outOfStockProducts: [Product!]!
  
  # Get recent products
  recentProducts(limit: Int = 10): [Product!]!
  
  # Enhanced product search with store context
  storeSearchProducts(query: String!): [Product!]!
  
  # Get all products in a category with store insights
  storeProductsByCategory(categoryId: ID!): [Product!]!
}

type Mutation {
  # Create new product
  createProduct(input: CreateProductInput!): Product!
  
  # Update existing product
  updateProduct(input: UpdateProductInput!): Product!
  
  # Delete product
  deleteProduct(id: ID!): Boolean!
  
  # Update product stock
  updateProductStock(id: ID!, quantity: Int!): Product!
  
  # Reduce product stock (for orders)
  reduceProductStock(id: ID!, quantity: Int!): Product!
}
